@page "/Payments/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]


<h3 class="card-title">Payments</h3>
<br />
<a href="/Payments/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Make New Payment
</a>
<br />
<br />
@if (Payments == null)
{
    <div class="alert alert-info">Loading Payments...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Payment Method</th>
                <th>Card Number</th>
                <th>CVC</th>
                <th>Payment Amount</th>
                <th>Event</th>
                <th>Eventee Name</th>


                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var payment in Payments)
            {
            <tr>
                <td>@payment.PaymentMethod</td>
                <td>@payment.CardNumber</td>
                <td>@payment.CVC</td>
                <th>@payment.EVENTER.Title</th>
                <th>@payment.EVENTER.TicketPrice</th>
                <td>@payment.Eventee</td>





                <td>
                    <a href="/Payments/view/@payment.Id" class="btn btn-primary">
                        <span class="oi oi-book"></span>
                    </a>
                    <a href="/Payments/edit/@payment.Id" class="btn btn-warning">
                        <span class="oi oi-pencil"></span>
                    </a>
                    <button class="btn btn-danger" @onclick="@(()=>Delete(payment.Id))">
                        <span class="oi oi-delete"></span>
                    </button>
                </td>
            </tr>
            }
        </tbody>
    </table>
}
<br />


@code {
    private List<Payment> Payments;

    protected async override Task OnInitializedAsync()
    {
        Payments = await _client.GetFromJsonAsync<List<Payment>>($"{Endpoints.PaymentsEndpoint}");

    }

    async Task Delete(int PaymentId)
    {
        var payment = Payments.First(q => q.Id == PaymentId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {payment.Id}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.PaymentsEndpoint}/{PaymentId}");
            await OnInitializedAsync();
        }


    }



}

