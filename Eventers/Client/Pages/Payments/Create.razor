@page "/Payments/create"
@inject HttpClient _client
@inject NavigationManager _navManager
@using Eventers.Client.Component

<h3 class="card-title">Join</h3>
<hr />
<br />
<EditForm Model="@Payment" OnValidSubmit="CreatePayment">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Event: </label>
        <div>
            <InputSelect @bind-Value="Payment.EventerId" class="form-control">
                <option value="">-- Select Event --</option>
                @if (EVENTERS != null)
                {
                    foreach (var Eventer in EVENTERS)
                    {
                        <option value="@Eventer.Id">@Eventer.Title</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => Payment.EventerId)" />
        </div>
    </div>

    <div class="form-group">
        <label>Name: </label>
        <div>
            <InputSelect @bind-Value="Payment.EventeeId" class="form-control">
                <option value="">-- Your Name --</option>
                @if (Eventees != null)
                {
                    foreach (var Eventee in Eventees)
                    {
                        <option value="@Eventee.Id">@Eventee.Name</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => Payment.EventerId)" />
        </div>
    </div>

    <div class="form-group">
        <label>Payment Method: </label>
        <div>
            <InputText @bind-Value="Payment.PaymentMethod" class="form-control" />
            <ValidationMessage For="@(() => Payment.PaymentMethod)" />
        </div>
    </div>



    <div class="form-group">
        <label>Card Number: </label>
        <div>
            <InputText @bind-Value="Payment.CardNumber" class="form-control" />
            <ValidationMessage For="@(() => Payment.CardNumber)" />
        </div>
    </div>



    <div class="form-group">
        <label>CVC: </label>
        <div>
            <InputText @bind-Value="Payment.CVC" class="form-control" />
            <ValidationMessage For="@(() => Payment.CVC)" />
        </div>
    </div>

    <div class="form-group">
        <label>Payment Amount: </label>
        <div>
            <InputSelect @bind-Value="Payment.EventerId" class="form-control">
                <option value="">-- Select Amount(According to event you are joining) --</option>
                @if (EVENTERS != null)
                {
                    foreach (var Eventer in EVENTERS)
                    {
                        <option value="@Eventer.Id">@Eventer.TicketPrice</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => Payment.EventerId)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Join
    </button>

    <BackToList Target="Payments" />

</EditForm>

@code {

    Payment Payment = new Payment();

    private IList<Eventee> Eventees;
    private IList<EVENTER> EVENTERS;

    protected async override Task OnInitializedAsync()
    {
        Eventees = await _client.GetFromJsonAsync<List<Eventee>>($"{Endpoints.EventeesEndpoint}");
        EVENTERS = await _client.GetFromJsonAsync<List<EVENTER>>($"{Endpoints.EventersEndpoint}");
    }

    private async Task CreatePayment()
    {
        await _client.PostAsJsonAsync(Endpoints.PaymentsEndpoint, Payment);
        _navManager.NavigateTo("/Payments/");
    }
}
