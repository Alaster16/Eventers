@page "/Eventers/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]


<h3 class="card-title">Eventers</h3>
<br />
<a href="/Eventers/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Event
</a>
<br />
<br />

@if (Eventers == null)
{
    <div class="alert alert-info">Loading Eventers...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Title</th>
                <th>Location</th>
                <th>Date</th>
                <th>Company</th>
                <th>Staff</th>

                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var eventer in Eventers)
            {
                <tr>
                    <td>@eventer.Title</td>
                    <td>@eventer.Location</td>
                    <td>@eventer.Date</td>
                    <td>@eventer.Company.CompanyName</td>
                    <td>@eventer.Staff.StaffName</td>
                    <td>
                        <a href="/Eventers/view/@eventer.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/Eventers/edit/@eventer.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(eventer.Id))">
                            <span class="oi oi-delete"></span>
                        </button>

                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<br />

@code {
    private List<EVENTER> Eventers;

    protected async override Task OnInitializedAsync()
    {
        Eventers = await _client.GetFromJsonAsync<List<EVENTER>>($"{Endpoints.EventersEndpoint}");

    }

    async Task Delete(int eventerId)
    {
        var eventer = Eventers.First(q => q.Id == eventerId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {eventer.Title}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.EventersEndpoint}/{eventerId}");
            await OnInitializedAsync();
        }


    }



}
